"""create profile table

Revision ID: 226d15a93b1a
Revises: f10a81e60818
Create Date: 2024-06-09 15:52:55.597946

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "226d15a93b1a"
down_revision: Union[str, None] = "f10a81e60818"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "profiles",
        sa.Column("first_name", sa.String(length=40), nullable=True),
    )
    op.add_column(
        "profiles", sa.Column("last_name", sa.String(length=40), nullable=True)
    )
    op.add_column("profiles", sa.Column("gender", sa.String(length=100), nullable=True))
    op.add_column("profiles", sa.Column("date_of_birth", sa.Date(), nullable=True))
    op.add_column("profiles", sa.Column("country_id", sa.Integer(), nullable=False))
    op.create_foreign_key(
        op.f("fk_profiles_country_id_countries"),
        "profiles",
        "countries",
        ["country_id"],
        ["id"],
    )
    op.drop_column("profiles", "firstname")
    op.drop_column("profiles", "bio")
    op.drop_column("profiles", "lastname")
    # ### end Alembic commands ###


def downgrade() -> None:
    op.add_column(
        "profiles",
        sa.Column(
            "lastname",
            sa.VARCHAR(length=40),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "profiles",
        sa.Column("bio", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "profiles",
        sa.Column(
            "firstname",
            sa.VARCHAR(length=40),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_constraint(
        op.f("fk_profiles_country_id_countries"),
        "profiles",
        type_="foreignkey",
    )
    op.drop_column("profiles", "country_id")
    op.drop_column("profiles", "date_of_birth")
    op.drop_column("profiles", "gender")
    op.drop_column("profiles", "last_name")
    op.drop_column("profiles", "first_name")
    # ### end Alembic commands ###
